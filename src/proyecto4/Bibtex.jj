/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = true;}PARSER_BEGIN(Bibtex)package proyecto4;

public class Bibtex{  public static void main(String args []) throws ParseException  {    Bibtex parser = new Bibtex(System.in);    while (true)    {      System.out.println("Reading from standard input...");      System.out.print("Enter an expression like \"1+(2+3)*4;\" :");      try      {        switch (Bibtex.one_line())        {          case 0 :           System.out.println("OK.");          break;          case 1 :           System.out.println("Goodbye.");          break;          default :           break;        }      }      catch (Exception e)      {        System.out.println("NOK.");        System.out.println(e.getMessage());        Bibtex.ReInit(System.in);      }      catch (Error e)      {        System.out.println("Oops.");        System.out.println(e.getMessage());        break;      }    }  }}PARSER_END(Bibtex)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* OPERATORS */{  
  < CORCHAB: "{" >
| < CORCHCIER: " }" >
| < ARROBA : "@" >
| < IGUAL : "=" >
| < ARTICLE : "article" >
| < BOOK : "book" >
| < BOOKLET : "booklet">
| < CONFERENCE :"conference">
| < INBOOK: "inbook">
| < INCOLLECTION:"incollection">
| < INPROCEEDINGS: "inproceedings">
| < MANUAL: "manual">
| < MASTERTHESIS: "masterthesis">
| < MISC: "misc">
| < PHDTHESIS: "phdthesis">
| < PROCEEDINGS: "proceedings">
| < TECHREPORT: "techreport">
| < UNPUBLISHED: "unpublished">
| < AUTHOR: "Author =">
| < TITLE: "Title =">
| < JOURNAL:"Journal =">
| < YEAR:"Year =">
| < VOLUME:"Volume =">
| < PUBLISHER:"Publisher =">
| < NUMBER:"Number =">
| < PAGES: "Pages =">
| < MONTH: "Month =">
| < DOI:"Doi =">
| < NOTE:"Note =">
| < KEY:"Key =">
| < EDITOR: "Editor =">
| < ADDRESS:"Address =">
| < EDITION:"Edition =">
| < SERIES: "Series =">
| < CHAPTER: "Chapter =">
| < URL: "Url =">
| < HOWPUBLISHED: "Howpublished =">
| < TYPE: "Type =">
| < BOOKTITLE: "Booktitle =">
| < ORGANIZATION: "Organization =">
| < SCHOOL: "School =">
| < INSTITUTION: "Institution =">
| < COMA: ",">}TOKEN :{
  < NUMEROS : "{"(< DIGIT >)+("--"< DIGIT >)*"}">
| < #DIGIT : [ "0"-"9" ] >
| < #MAYUS : ["A"-"Z"]>
| < #MINUS : ["a"-"z"]>
| < MINUSCULAS: (< MINUS >)+ >
| < NTERM: (<MAYUS>(<MAYUS>|<MINUS>)*)>
| < TERM: "{"(<MAYUS> (<MINUS>)* (","< MAYUS >(< MINUS >)*)*)"}">}int one_line() :{}{  sum() ";"  {    return 0;  }| ";"  {    return 1;  }}void sum() :{}{  term()  (    (      < PLUS >    | < MINUS >    )    term()  )*}void term() :{}{  unary()  (    (      < MULTIPLY >    | < DIVIDE >    )    unary()  )*}void unary() :{}{  < MINUS > element()| element()}void element() :{}{  < CONSTANT >| "(" sum() ")"}
